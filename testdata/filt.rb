# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Filt < Formula
  desc "filt is a interactive/realtime stream filter."
  homepage "https://github.com/k1LoW/filt"
  version "0.8.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/k1LoW/filt/releases/download/v0.8.0/filt_v0.8.0_darwin_arm64.zip"
      sha256 "2923c5d872745728fc21ac0b5f8b892f987c4654f00591fa7555df6f0b52301f"

      def install
        bin.install 'filt'
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'bash')
        (bash_completion/'filt').write output
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'zsh')
        (zsh_completion/'_filt').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/k1LoW/filt/releases/download/v0.8.0/filt_v0.8.0_darwin_amd64.zip"
      sha256 "137b15437a15569141b12c02d05317e1c0b9db567ea7ef4d88e11cce0db0d1fd"

      def install
        bin.install 'filt'
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'bash')
        (bash_completion/'filt').write output
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'zsh')
        (zsh_completion/'_filt').write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/k1LoW/filt/releases/download/v0.8.0/filt_v0.8.0_linux_arm64.tar.gz"
      sha256 "5424589e650c66de2c238473ed53bf1c7ab99f9dfb91eeffc5437bd9d397de89"

      def install
        bin.install 'filt'
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'bash')
        (bash_completion/'filt').write output
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'zsh')
        (zsh_completion/'_filt').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/k1LoW/filt/releases/download/v0.8.0/filt_v0.8.0_linux_amd64.tar.gz"
      sha256 "af1d99a7e0507b256eb1e88f36a5b507cca35952c13b0e00afa90a40d95418cb"

      def install
        bin.install 'filt'
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'bash')
        (bash_completion/'filt').write output
        output = Utils.safe_popen_read("#{bin}/filt", 'completion', 'zsh')
        (zsh_completion/'_filt').write output
      end
    end
  end
end
